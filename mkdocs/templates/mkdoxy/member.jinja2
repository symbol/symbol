---
brief: True
details: True
implements: True
---
{% filter indent(config.get('indent_level', 0), True) %}

# <code class="doc-symbol doc-symbol-heading doc-symbol-{{node.kind.value}}"></code> {{node.name_long}}
{% if node.has_templateparams %}
**template &lt;{{node.templateparams}}&gt;**
{% endif %}


{% if node.is_file and node.has_programlisting -%}
[Go to the source code of this file]({{node.url_source}})
{%- endif %}

<dl class="automatic-reference-term" markdown><dt>Java:{{ node.name_long|replace("::",".") }}</dt><dd>
{{node.brief}}
</dd></dl>

{%- if node.has_details -%}
[More...](#detailed-description)
{%- endif %}

{% if node.has_includes -%}
{%- for include in node.includes -%}
* `#include {{include}}`
{% endfor -%}
{%- endif %}

{% if node.has_base_classes %}
Inherits the following classes:
{%- for base in node.base_classes -%}
{%- if base is string %} {{base}}{%- else %} <Java:{{base.name_long|replace("::",".")}}|{{base.name_long}}>{%- endif -%}
{{ ', ' if not loop.last else '' }}
{%- endfor -%}
{%- endif %}

{% if node.has_derived_classes %}
Inherited by the following classes:
{%- for derived in node.derived_classes -%}
{%- if derived is string %} {{derived}}{%- else %} <Java:{{derived.name_long|replace("::",".")}}|{{derived.name_long}}>{%- endif -%}
{{ ', ' if not loop.last else '' }}
{%- endfor -%}
{%- endif %}

{{ templateMemTab.render({'config': {}, 'node': node, 'parent': None, 'title': 'Files', 'visibility': 'public', 'kinds': ['file'], 'static': False}) }}
{{ templateMemTab.render({'config': {}, 'node': node, 'parent': None, 'title': 'Directories', 'visibility': 'public', 'kinds': ['dir'], 'static': False}) }}
{{ templateMemTab.render({'config': {}, 'node': node, 'parent': None, 'title': 'Modules', 'visibility': 'public', 'kinds': ['group'], 'static': False}) }}
{{ templateMemTab.render({'config': {}, 'node': node, 'parent': None, 'title': 'Namespaces', 'visibility': 'public', 'kinds': ['namespace'], 'static': False}) }}
{{ templateMemTab.render({'config': {}, 'node': node, 'parent': None, 'title': 'Classes', 'visibility': 'public', 'kinds': ['class', 'struct', 'interface'], 'static': False}) }}

{{ templateMemTab.render({'config': {"":""}, 'node': node, 'parent': None, 'title': 'Macros', 'visibility': 'public', 'kinds': ['define'], 'static': False}) }}

{%- if node.has_details %}
## Detailed Description

{{node.details | use_code_language(node.code_language)}}
{%- endif %}

{%- for visibility in ['public', 'protected'] -%}
{%- for query in [['types', ['enum', 'union', 'typedef']], ['attributes', ['variable']], ['properties', ['property']], ['slots', ['slot']], ['signals', ['signal']], ['functions', ['function']]] -%}
{%- for static in [['', False], ['static ', True]] %}
{%- if node.has(visibility, query[1], static[1]) %}
## {{visibility|title}} {{static[0]|title}}{{query[0]|title}}
{% for member in node.query(visibility, query[1], static[1]) -%}
{{ templateMemDef.render({'config': {}, 'node': member, 'configMemDef': configMemDef}) }}
{%- endfor %}
{%- endif -%}
{%- endfor -%}
{%- endfor -%}
{%- endfor -%}

{%- if node.has('public', ['define'], False) %}
## Macro Definition Documentation

{% for member in node.query('public', ['define'], False) -%}
{{ templateMemDef.render({'config': {}, 'node': member, 'configMemDef': configMemDef}) }}
{%- endfor -%}
{%- endif %}

{%- if node.has('public', ['friend'], False) -%}
## Friends Documentation

{% for member in node.query('public', ['friend'], False) -%}
{{ templateMemDef.render({'config': {}, 'node': member, 'configMemDef': configMemDef}) }}
{%- endfor %}
{%- endif %}

{% endfilter %}
