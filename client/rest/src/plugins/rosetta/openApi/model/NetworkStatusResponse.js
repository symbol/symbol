/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import BlockIdentifier from './BlockIdentifier.js';
import Peer from './Peer.js';
import SyncStatus from './SyncStatus.js';

/**
 * The NetworkStatusResponse model module.
 * @module model/NetworkStatusResponse
 * @version 1.4.13
 */
class NetworkStatusResponse {
    /**
     * Constructs a new <code>NetworkStatusResponse</code>.
     * NetworkStatusResponse contains basic information about the node&#39;s view of a blockchain network. It is assumed that any BlockIdentifier.Index less than or equal to CurrentBlockIdentifier.Index can be queried. If a Rosetta implementation prunes historical state, it should populate the optional &#x60;oldest_block_identifier&#x60; field with the oldest block available to query. If this is not populated, it is assumed that the &#x60;genesis_block_identifier&#x60; is the oldest queryable block. If a Rosetta implementation performs some pre-sync before it is possible to query blocks, sync_status should be populated so that clients can still monitor healthiness. Without this field, it may appear that the implementation is stuck syncing and needs to be terminated.
     * @alias module:model/NetworkStatusResponse
     * @param currentBlockIdentifier {module:model/BlockIdentifier} 
     * @param currentBlockTimestamp {Number} The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
     * @param genesisBlockIdentifier {module:model/BlockIdentifier} 
     */
    constructor(currentBlockIdentifier, currentBlockTimestamp, genesisBlockIdentifier) { 
        
        NetworkStatusResponse.initialize(this, currentBlockIdentifier, currentBlockTimestamp, genesisBlockIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currentBlockIdentifier, currentBlockTimestamp, genesisBlockIdentifier) { 
        obj['current_block_identifier'] = currentBlockIdentifier;
        obj['current_block_timestamp'] = currentBlockTimestamp;
        obj['genesis_block_identifier'] = genesisBlockIdentifier;
    }

    /**
     * Constructs a <code>NetworkStatusResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkStatusResponse} obj Optional instance to populate.
     * @return {module:model/NetworkStatusResponse} The populated <code>NetworkStatusResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkStatusResponse();

            if (data.hasOwnProperty('current_block_identifier')) {
                obj['current_block_identifier'] = BlockIdentifier.constructFromObject(data['current_block_identifier']);
            }
            if (data.hasOwnProperty('current_block_timestamp')) {
                obj['current_block_timestamp'] = ApiClient.convertToType(data['current_block_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('genesis_block_identifier')) {
                obj['genesis_block_identifier'] = BlockIdentifier.constructFromObject(data['genesis_block_identifier']);
            }
            if (data.hasOwnProperty('oldest_block_identifier')) {
                obj['oldest_block_identifier'] = BlockIdentifier.constructFromObject(data['oldest_block_identifier']);
            }
            if (data.hasOwnProperty('sync_status')) {
                obj['sync_status'] = SyncStatus.constructFromObject(data['sync_status']);
            }
            if (data.hasOwnProperty('peers')) {
                obj['peers'] = ApiClient.convertToType(data['peers'], [Peer]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkStatusResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkStatusResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NetworkStatusResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `current_block_identifier`
        if (data['current_block_identifier']) { // data not null
          BlockIdentifier.validateJSON(data['current_block_identifier']);
        }
        // validate the optional field `genesis_block_identifier`
        if (data['genesis_block_identifier']) { // data not null
          BlockIdentifier.validateJSON(data['genesis_block_identifier']);
        }
        // validate the optional field `oldest_block_identifier`
        if (data['oldest_block_identifier']) { // data not null
          BlockIdentifier.validateJSON(data['oldest_block_identifier']);
        }
        // validate the optional field `sync_status`
        if (data['sync_status']) { // data not null
          SyncStatus.validateJSON(data['sync_status']);
        }
        if (data['peers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['peers'])) {
                throw new Error("Expected the field `peers` to be an array in the JSON data but got " + data['peers']);
            }
            // validate the optional field `peers` (array)
            for (const item of data['peers']) {
                Peer.validateJSON(item);
            };
        }

        return true;
    }


}

NetworkStatusResponse.RequiredProperties = ["current_block_identifier", "current_block_timestamp", "genesis_block_identifier"];

/**
 * @member {module:model/BlockIdentifier} current_block_identifier
 */
NetworkStatusResponse.prototype['current_block_identifier'] = undefined;

/**
 * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
 * @member {Number} current_block_timestamp
 */
NetworkStatusResponse.prototype['current_block_timestamp'] = undefined;

/**
 * @member {module:model/BlockIdentifier} genesis_block_identifier
 */
NetworkStatusResponse.prototype['genesis_block_identifier'] = undefined;

/**
 * @member {module:model/BlockIdentifier} oldest_block_identifier
 */
NetworkStatusResponse.prototype['oldest_block_identifier'] = undefined;

/**
 * @member {module:model/SyncStatus} sync_status
 */
NetworkStatusResponse.prototype['sync_status'] = undefined;

/**
 * @member {Array.<module:model/Peer>} peers
 */
NetworkStatusResponse.prototype['peers'] = undefined;






export default NetworkStatusResponse;

