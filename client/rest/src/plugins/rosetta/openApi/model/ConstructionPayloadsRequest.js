/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import NetworkIdentifier from './NetworkIdentifier.js';
import Operation from './Operation.js';
import PublicKey from './PublicKey.js';

/**
 * The ConstructionPayloadsRequest model module.
 * @module model/ConstructionPayloadsRequest
 * @version 1.4.13
 */
class ConstructionPayloadsRequest {
    /**
     * Constructs a new <code>ConstructionPayloadsRequest</code>.
     * ConstructionPayloadsRequest is the request to &#x60;/construction/payloads&#x60;. It contains the network, a slice of operations, and arbitrary metadata that was returned by the call to &#x60;/construction/metadata&#x60;. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse.
     * @alias module:model/ConstructionPayloadsRequest
     * @param networkIdentifier {module:model/NetworkIdentifier} 
     * @param operations {Array.<module:model/Operation>} 
     */
    constructor(networkIdentifier, operations) { 
        
        ConstructionPayloadsRequest.initialize(this, networkIdentifier, operations);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, networkIdentifier, operations) { 
        obj['network_identifier'] = networkIdentifier;
        obj['operations'] = operations;
    }

    /**
     * Constructs a <code>ConstructionPayloadsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConstructionPayloadsRequest} obj Optional instance to populate.
     * @return {module:model/ConstructionPayloadsRequest} The populated <code>ConstructionPayloadsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConstructionPayloadsRequest();

            if (data.hasOwnProperty('network_identifier')) {
                obj['network_identifier'] = NetworkIdentifier.constructFromObject(data['network_identifier']);
            }
            if (data.hasOwnProperty('operations')) {
                obj['operations'] = ApiClient.convertToType(data['operations'], [Operation]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('public_keys')) {
                obj['public_keys'] = ApiClient.convertToType(data['public_keys'], [PublicKey]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConstructionPayloadsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConstructionPayloadsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConstructionPayloadsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `network_identifier`
        if (data['network_identifier']) { // data not null
          NetworkIdentifier.validateJSON(data['network_identifier']);
        }
        if (data['operations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['operations'])) {
                throw new Error("Expected the field `operations` to be an array in the JSON data but got " + data['operations']);
            }
            // validate the optional field `operations` (array)
            for (const item of data['operations']) {
                Operation.validateJSON(item);
            };
        }
        if (data['public_keys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['public_keys'])) {
                throw new Error("Expected the field `public_keys` to be an array in the JSON data but got " + data['public_keys']);
            }
            // validate the optional field `public_keys` (array)
            for (const item of data['public_keys']) {
                PublicKey.validateJSON(item);
            };
        }

        return true;
    }


}

ConstructionPayloadsRequest.RequiredProperties = ["network_identifier", "operations"];

/**
 * @member {module:model/NetworkIdentifier} network_identifier
 */
ConstructionPayloadsRequest.prototype['network_identifier'] = undefined;

/**
 * @member {Array.<module:model/Operation>} operations
 */
ConstructionPayloadsRequest.prototype['operations'] = undefined;

/**
 * @member {Object} metadata
 */
ConstructionPayloadsRequest.prototype['metadata'] = undefined;

/**
 * @member {Array.<module:model/PublicKey>} public_keys
 */
ConstructionPayloadsRequest.prototype['public_keys'] = undefined;






export default ConstructionPayloadsRequest;

