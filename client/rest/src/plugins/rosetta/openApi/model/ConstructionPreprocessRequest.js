/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import NetworkIdentifier from './NetworkIdentifier.js';
import Operation from './Operation.js';

/**
 * The ConstructionPreprocessRequest model module.
 * @module model/ConstructionPreprocessRequest
 * @version 1.4.13
 */
class ConstructionPreprocessRequest {
	/**
	 * Constructs a new <code>ConstructionPreprocessRequest</code>.
	 * ConstructionPreprocessRequest is passed to the &#x60;/construction/preprocess&#x60; endpoint so that a Rosetta implementation can determine which metadata it needs to request for construction. Metadata provided in this object should NEVER be a product of live data (i.e. the caller must follow some network-specific data fetching strategy outside of the Construction API to populate required Metadata). If live data is required for construction, it MUST be fetched in the call to &#x60;/construction/metadata&#x60;.
	 * @alias module:model/ConstructionPreprocessRequest
	 * @param networkIdentifier {module:model/NetworkIdentifier}
	 * @param operations {Array.<module:model/Operation>}
	 */
	constructor(networkIdentifier, operations) {

		ConstructionPreprocessRequest.initialize(this, networkIdentifier, operations);
	}

	/**
	 * Initializes the fields of this object.
	 * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
	 * Only for internal use.
	 */
	static initialize(obj, networkIdentifier, operations) {
		obj['network_identifier'] = networkIdentifier;
		obj['operations'] = operations;
	}

	/**
	 * Constructs a <code>ConstructionPreprocessRequest</code> from a plain JavaScript object, optionally creating a new instance.
	 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @param {module:model/ConstructionPreprocessRequest} obj Optional instance to populate.
	 * @return {module:model/ConstructionPreprocessRequest} The populated <code>ConstructionPreprocessRequest</code> instance.
	 */
	static constructFromObject(data, obj) {
		if (data) {
			obj = obj || new ConstructionPreprocessRequest();

			if (data.hasOwnProperty('network_identifier')) {
				obj['network_identifier'] = NetworkIdentifier.constructFromObject(data['network_identifier']);
			}
			if (data.hasOwnProperty('operations')) {
				obj['operations'] = ApiClient.convertToType(data['operations'], [Operation]);
			}
			if (data.hasOwnProperty('metadata')) {
				obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
			}
		}
		return obj;
	}

	/**
	 * Validates the JSON data with respect to <code>ConstructionPreprocessRequest</code>.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConstructionPreprocessRequest</code>.
	 */
	static validateJSON(data) {
		// check to make sure all required properties are present in the JSON string
		for (const property of ConstructionPreprocessRequest.RequiredProperties) {
			if (!data.hasOwnProperty(property)) {
				throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
			}
		}
		// validate the optional field `network_identifier`
		if (data['network_identifier']) { // data not null
		  NetworkIdentifier.validateJSON(data['network_identifier']);
		}
		if (data['operations']) { // data not null
			// ensure the json data is an array
			if (!Array.isArray(data['operations'])) {
				throw new Error("Expected the field `operations` to be an array in the JSON data but got " + data['operations']);
			}
			// validate the optional field `operations` (array)
			for (const item of data['operations']) {
				Operation.validateJSON(item);
			};
		}

		return true;
	}


}

ConstructionPreprocessRequest.RequiredProperties = ["network_identifier", "operations"];

/**
 * @member {module:model/NetworkIdentifier} network_identifier
 */
ConstructionPreprocessRequest.prototype['network_identifier'] = undefined;

/**
 * @member {Array.<module:model/Operation>} operations
 */
ConstructionPreprocessRequest.prototype['operations'] = undefined;

/**
 * @member {Object} metadata
 */
ConstructionPreprocessRequest.prototype['metadata'] = undefined;






export default ConstructionPreprocessRequest;

