/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import NetworkIdentifier from './NetworkIdentifier.js';
import PublicKey from './PublicKey.js';

/**
 * The ConstructionDeriveRequest model module.
 * @module model/ConstructionDeriveRequest
 * @version 1.4.13
 */
class ConstructionDeriveRequest {
	/**
	 * Constructs a new <code>ConstructionDeriveRequest</code>.
	 * ConstructionDeriveRequest is passed to the &#x60;/construction/derive&#x60; endpoint. Network is provided in the request because some blockchains have different address formats for different networks. Metadata is provided in the request because some blockchains allow for multiple address types (i.e. different address for validators vs normal accounts).
	 * @alias module:model/ConstructionDeriveRequest
	 * @param networkIdentifier {module:model/NetworkIdentifier}
	 * @param publicKey {module:model/PublicKey}
	 */
	constructor(networkIdentifier, publicKey) {

		ConstructionDeriveRequest.initialize(this, networkIdentifier, publicKey);
	}

	/**
	 * Initializes the fields of this object.
	 * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
	 * Only for internal use.
	 */
	static initialize(obj, networkIdentifier, publicKey) {
		obj['network_identifier'] = networkIdentifier;
		obj['public_key'] = publicKey;
	}

	/**
	 * Constructs a <code>ConstructionDeriveRequest</code> from a plain JavaScript object, optionally creating a new instance.
	 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @param {module:model/ConstructionDeriveRequest} obj Optional instance to populate.
	 * @return {module:model/ConstructionDeriveRequest} The populated <code>ConstructionDeriveRequest</code> instance.
	 */
	static constructFromObject(data, obj) {
		if (data) {
			obj = obj || new ConstructionDeriveRequest();

			if (data.hasOwnProperty('network_identifier')) {
				obj['network_identifier'] = NetworkIdentifier.constructFromObject(data['network_identifier']);
			}
			if (data.hasOwnProperty('public_key')) {
				obj['public_key'] = PublicKey.constructFromObject(data['public_key']);
			}
			if (data.hasOwnProperty('metadata')) {
				obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
			}
		}
		return obj;
	}

	/**
	 * Validates the JSON data with respect to <code>ConstructionDeriveRequest</code>.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConstructionDeriveRequest</code>.
	 */
	static validateJSON(data) {
		// check to make sure all required properties are present in the JSON string
		for (const property of ConstructionDeriveRequest.RequiredProperties) {
			if (!data.hasOwnProperty(property)) {
				throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
			}
		}
		// validate the optional field `network_identifier`
		if (data['network_identifier']) { // data not null
		  NetworkIdentifier.validateJSON(data['network_identifier']);
		}
		// validate the optional field `public_key`
		if (data['public_key']) { // data not null
		  PublicKey.validateJSON(data['public_key']);
		}

		return true;
	}


}

ConstructionDeriveRequest.RequiredProperties = ["network_identifier", "public_key"];

/**
 * @member {module:model/NetworkIdentifier} network_identifier
 */
ConstructionDeriveRequest.prototype['network_identifier'] = undefined;

/**
 * @member {module:model/PublicKey} public_key
 */
ConstructionDeriveRequest.prototype['public_key'] = undefined;

/**
 * @member {Object} metadata
 */
ConstructionDeriveRequest.prototype['metadata'] = undefined;






export default ConstructionDeriveRequest;

