/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import NetworkIdentifier from './NetworkIdentifier.js';
import PublicKey from './PublicKey.js';

/**
 * The ConstructionMetadataRequest model module.
 * @module model/ConstructionMetadataRequest
 * @version 1.4.13
 */
class ConstructionMetadataRequest {
    /**
     * Constructs a new <code>ConstructionMetadataRequest</code>.
     * A ConstructionMetadataRequest is utilized to get information required to construct a transaction. The Options object used to specify which metadata to return is left purposely unstructured to allow flexibility for implementers. Options is not required in the case that there is network-wide metadata of interest. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse.
     * @alias module:model/ConstructionMetadataRequest
     * @param networkIdentifier {module:model/NetworkIdentifier} 
     */
    constructor(networkIdentifier) { 
        
        ConstructionMetadataRequest.initialize(this, networkIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, networkIdentifier) { 
        obj['network_identifier'] = networkIdentifier;
    }

    /**
     * Constructs a <code>ConstructionMetadataRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConstructionMetadataRequest} obj Optional instance to populate.
     * @return {module:model/ConstructionMetadataRequest} The populated <code>ConstructionMetadataRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConstructionMetadataRequest();

            if (data.hasOwnProperty('network_identifier')) {
                obj['network_identifier'] = NetworkIdentifier.constructFromObject(data['network_identifier']);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], Object);
            }
            if (data.hasOwnProperty('public_keys')) {
                obj['public_keys'] = ApiClient.convertToType(data['public_keys'], [PublicKey]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConstructionMetadataRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConstructionMetadataRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConstructionMetadataRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `network_identifier`
        if (data['network_identifier']) { // data not null
          NetworkIdentifier.validateJSON(data['network_identifier']);
        }
        if (data['public_keys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['public_keys'])) {
                throw new Error("Expected the field `public_keys` to be an array in the JSON data but got " + data['public_keys']);
            }
            // validate the optional field `public_keys` (array)
            for (const item of data['public_keys']) {
                PublicKey.validateJSON(item);
            };
        }

        return true;
    }


}

ConstructionMetadataRequest.RequiredProperties = ["network_identifier"];

/**
 * @member {module:model/NetworkIdentifier} network_identifier
 */
ConstructionMetadataRequest.prototype['network_identifier'] = undefined;

/**
 * Some blockchains require different metadata for different types of transaction construction (ex: delegation versus a transfer). Instead of requiring a blockchain node to return all possible types of metadata for construction (which may require multiple node fetches), the client can populate an options object to limit the metadata returned to only the subset required.
 * @member {Object} options
 */
ConstructionMetadataRequest.prototype['options'] = undefined;

/**
 * @member {Array.<module:model/PublicKey>} public_keys
 */
ConstructionMetadataRequest.prototype['public_keys'] = undefined;






export default ConstructionMetadataRequest;

