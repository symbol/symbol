/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * The version of the OpenAPI document: 1.4.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
 * The PartialBlockIdentifier model module.
 * @module model/PartialBlockIdentifier
 * @version 1.4.13
 */
class PartialBlockIdentifier {
	/**
	 * Constructs a new <code>PartialBlockIdentifier</code>.
	 * When fetching data by BlockIdentifier, it may be possible to only specify the index or hash. If neither property is specified, it is assumed that the client is making a request at the current block.
	 * @alias module:model/PartialBlockIdentifier
	 */
	constructor() {

		PartialBlockIdentifier.initialize(this);
	}

	/**
	 * Initializes the fields of this object.
	 * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
	 * Only for internal use.
	 */
	static initialize(obj) {
	}

	/**
	 * Constructs a <code>PartialBlockIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
	 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @param {module:model/PartialBlockIdentifier} obj Optional instance to populate.
	 * @return {module:model/PartialBlockIdentifier} The populated <code>PartialBlockIdentifier</code> instance.
	 */
	static constructFromObject(data, obj) {
		if (data) {
			obj = obj || new PartialBlockIdentifier();

			if (data.hasOwnProperty('index')) {
				obj['index'] = ApiClient.convertToType(data['index'], 'Number');
			}
			if (data.hasOwnProperty('hash')) {
				obj['hash'] = ApiClient.convertToType(data['hash'], 'String');
			}
		}
		return obj;
	}

	/**
	 * Validates the JSON data with respect to <code>PartialBlockIdentifier</code>.
	 * @param {Object} data The plain JavaScript object bearing properties of interest.
	 * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PartialBlockIdentifier</code>.
	 */
	static validateJSON(data) {
		// ensure the json data is a string
		if (data['hash'] && !(typeof data['hash'] === 'string' || data['hash'] instanceof String)) {
			throw new Error("Expected the field `hash` to be a primitive type in the JSON string but got " + data['hash']);
		}

		return true;
	}


}



/**
 * @member {Number} index
 */
PartialBlockIdentifier.prototype['index'] = undefined;

/**
 * @member {String} hash
 */
PartialBlockIdentifier.prototype['hash'] = undefined;






export default PartialBlockIdentifier;

